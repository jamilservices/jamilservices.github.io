@use "_base/settings";

:where(:root) {
  @include settings.base-root;
  @include settings.border;
  --sepia-color: 0;
  --gray-color: 0;
}
:where(html) {
  filter: sepia(var(--sepia-color)) grayscale(var(--gray-color));
}

:where(html, body) {
  inline-size: 100%;
  block-size: 100%;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  outline: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-color: var(--background-color);
  color: var(--text-color);

  *,
  *::before,
  *::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    outline: none;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
}
body {
  overflow: auto;
}
:where(svg) {
  pointer-events: none;
}
:where(ol, ul) {
  list-style: none;
}

:where(h1, h2, h3, h4, h5, h6) {
  font-weight: var(--font-weight-5);
}

//noinspection CssNoGenericFontName
:where(p) {
  display: block;
  overflow: hidden;
  white-space: normal;
  padding-block: 0.5rem;
  font-size: var(--font-size-2);
  font-weight: var(--font-weight-4);
  line-height: var(--font-line-height-3);
  letter-spacing: var(--font-letter-spacing-2);
  font-family: var(--font-sans);
}

:where(strong,b) {
  font-weight: normal;
  line-height: inherit;
}
:where(em, i) {
  font-style: normal;
  line-height: inherit;
}
:where(img, picture) {
  max-inline-size: 100%;
  display: inline-flex;
}
:where(input, button, textarea, select) {
  font: inherit;
  color: inherit;
}

:is(section.rounded, div.rounded, li.rounded, button.rounded, span.rounded) {
  border-radius: var(--radius-round);
}
:is(button.link, li.link, span.link, i.link) {
  cursor: pointer;
}


:where(header, main, section.settings-color, footer) {
  display: inline-flex;
  inline-size: 100%;
  max-inline-size: 64rem;
  padding: 1rem;
  :where(section) {
    display: inline-flex;
  }
}
:where(header, main) {
  align-items: flex-start;
}
:is(section.mobile-menu, input[data-state="menu-mobile-control"]) {
  display: none;
}
:where(section.mobile-menu) {
  position: fixed;
  z-index: 99999;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: 0;
  padding: 0;
  justify-content: center;
  align-items: center;

  flex-direction: column;

  background-color: rgba(44, 44, 44, .95);
  padding-block: 2ex;
  padding-inline: 2ex;
  gap: 1ex;

  :where(a) {
    text-decoration: none;
  }

  :where(span) {
    display: inline-flex;
    margin: 0;
    padding: 0;
    justify-content: center;
    align-items: center;
    font-size: var(--font-size-5);
    block-size: 3ex;
    inline-size: 3ex;
    border: 0;
    border-radius: var(--radius-round);
    background-color: #B22222;
    align-self: flex-end;
  }

  :where(ul) {
    display: inline-flex;
    flex-direction: column;
    flex-grow: 1;
    inline-size: 100%;

    justify-content: center;
    align-items: center;
    li {
      display: inline-flex;
      padding: 0;
      margin: 0;
      inline-size: fit-content;
      block-size: fit-content;
      :is(&.item-menu) {
        //noinspection CssNoGenericFontName
        :where(a,span) {
          display: inline-flex;
          font-family: var(--font-sans);
          padding-inline: 0.75rem;
          padding-block: 0.5rem;
          font-size: var(--font-size-5);
          font-weight: var(--font-weight-4);
          color: inherit;
          border: 0;
          border-radius: var(--radius-round);

          &:hover {
            background-color: var(--menu-hover-background-color);
          }
        }
      }
    }
  }
}
:is(input[data-state="menu-mobile-control"]:checked) + section.mobile-menu{
  display: inline-flex;
}